---
- name: Configure Wordpress
  hosts: ubuntu
  become: true
  tasks:
    - name: Add Php repo
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Update Ubuntu OS
      ansible.builtin.apt:
        state: latest
        update_cache: yes

    - name: Install latest version of Nginx and Mariadb server
      ansible.builtin.apt:
        name:
          - nginx
          - mariadb-server
        state: present

    - name: Install php dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop: "{{ php_dependencies }}"

    - name: Install pip package
      package:
        name: python3-pip
        state: present

    - name: Install PyMySQL module
      pip:
        name: pymysql
        state: present

    - name: Create database user
      community.mysql.mysql_user:
        name: "{{ dbuser }}"
        password: "{{ dbpass }}"
        priv: '*.*:ALL'
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create new database
      community.mysql.mysql_db:
        name: "{{ dbname }}"
        login_user: "{{ dbuser }}"
        login_password: "{{ dbpass }}"
        state: present

    - name: Download wordpress
      ansible.builtin.get_url:
        url: https://en-gb.wordpress.org/latest-en_GB.tar.gz
        dest: /var/www/

    - name: Unarchive wordpress zip file
      ansible.builtin.unarchive:
        src: "/var/www/wordpress-6.2.2-en_GB.tar.gz"
        dest: /var/www/
        remote_src: true

    - name: Create document root
      ansible.builtin.file:
        path: /var/www/wordpress
        state: directory
        owner: www-data
        group: www-data
        mode: '755'
        recurse: true

    - name: Configure wordpress
      ansible.builtin.template:
        src: wp-config.php.j2
        dest: /var/www/wordpress/wp-config.php

    - name: Configure nginx
      ansible.builtin.template:
        src: wordpress.conf.j2
        dest: /etc/nginx/sites-available/wordpress.conf

    - name: Remove file (delete file)
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/nginx/sites-available/default
        - /etc/nginx/sites-enabled/default
        - /var/www/wordpress-6.2.2-en_GB.tar.gz

    - name: Create a symbolic link
      ansible.builtin.file:
        src: /etc/nginx/sites-available/wordpress.conf
        dest: /etc/nginx/sites-enabled/wordpress.conf
        owner: root
        group: root
        state: link

    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted